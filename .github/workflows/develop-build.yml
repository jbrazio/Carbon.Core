###
### Copyright (c) 2022 Carbon Community 
### All rights reserved
###
name: Develop Build
concurrency: build-3-develop

on:
  schedule:
    - cron: '0 5 * * *'

  push:
    branches:
      - develop
    
  pull_request:
    branches:
      - develop

  workflow_dispatch:

jobs:
  bootstrap:
    name: 🥾 Bootstrap
    runs-on: ubuntu-latest

    outputs:
      date:  ${{ steps.step1.outputs.date }}
      clock: ${{ steps.step1.outputs.clock }}
      tag:   ${{ steps.step1.outputs.tag }}
      ref:   ${{ steps.step1.outputs.ref }}

    steps:
      - name: 🪵 Log environment
        uses: crazy-max/ghaction-dump-context@v1
        
      - name: 🔗 Checkout source code from github
        uses: actions/checkout@v3
        with:
          ref: develop

      - name: 📅 Prepare the environment
        id: step1
        run: |
          echo "::set-output name=date::$(date +'%Y-%m-%d')"
          echo "::set-output name=clock::$(date +'%H:%M:%S')"
          echo "::set-output name=tag::$(date +'%Yd%j')"
          echo "::set-output name=ref::$(git rev-parse --short HEAD)"

  build-linux:
    name: 🐧 Linux
    needs: bootstrap
    runs-on: ubuntu-latest
    continue-on-error: false

    outputs:
      artifact: build-develop-${{ needs.bootstrap.outputs.ref }}-linux
      build_info: Built at ${{ needs.bootstrap.outputs.date }} ${{ needs.bootstrap.outputs.clock }} based on commit ${{ needs.bootstrap.outputs.ref }}.
    
    steps:
    - name: 🔗 Checkout source code from github
      uses: actions/checkout@v3
      with:
        ref: develop

    - name: 🛤️ Setup the dotnet build environment
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - name: 🪚 Setup the Carbon build environment
      shell: bash
      run: |
        ${GITHUB_WORKSPACE}/Tools/Build/linux/bootstrap.sh

    - name: 🐧 Built Carbon on Linux
      shell: bash
      run: |
        ${GITHUB_WORKSPACE}/Tools/Build/linux/build_debug.sh
        
    - name: ⬆️ Upload the artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-develop-${{ needs.bootstrap.outputs.ref }}-linux
        path: Release

  build-windows:
    name: 🪟 Windows
    needs: bootstrap
    runs-on: windows-latest
    continue-on-error: false
    
    steps:
    - name: 🔗 Checkout source code from github
      uses: actions/checkout@v3
      with:
        ref: develop

    - name: 🛤️ Setup the dotnet build environment
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - name: 🪚 Setup the Carbon build environment
      shell: cmd
      run: |
        %GITHUB_WORKSPACE%\Tools\Build\win\bootstrap.bat

    - name: 🪟 Built Carbon on Windows
      shell: cmd
      run: |
        %GITHUB_WORKSPACE%\Tools\Build\win\build_debug.bat

    - name: ⬆️ Upload the artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-develop-${{ needs.bootstrap.outputs.ref }}-windows
        path: Release

  release:
    name: 💾 Release
    needs: [ "build-linux", "build-windows" ]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
    # only release if triggered by the scheduler
    # or if manually triggered by a developer

    steps:
    - name: ⬇️ Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: ${{ needs.build-linux.outputs.artifact }}
        path: Release/

    - name: 🏷️ Update release tag
      uses: softprops/action-gh-release@v1
      with:
        prerelease: true
        tag_name: develop_build
        name: 'Carbon Build (develop)'
        body: |
          This is a build of Carbon based on the `develop` branch.
          
          This build is targeted at developers.
          The general public is advised to use one of the [stable] builds.

          ### How to install
          1. Download the `Carbon.Patch.zip` archive from the attachments below.
          2. Unzip the archive to the root of your Rust Dedicated Server.
          3. Restart the server and enjoy.
          
          ${{ needs.build-linux.outputs.build_info }}

          [stable]: https://github.com/Carbon-Modding/Carbon.Core/releases/latest
        files: |
          Release/Carbon.dll
          Release/Carbon.Patch.zip
          Release/Carbon-Unix.dll
          Release/Carbon.Patch-Unix.zip
